/*实现
1.栅格，12等分；可以自适应。
2.移动和PC端显示和隐藏。
3.辅助样式，浮动/模块居中/盒模型/清除浮动/文字一行显示
*/
 @grid-columns:12;
 @grid-gutter-width:30px;
 @grid-float-breakpoint:768px;

 /*@columns: @grid-columns;*/
 @gutter: @grid-gutter-width;
 @screen-sm:768px;
 @screen-xs:767px;
 @screen-sm-min:@screen-sm;
 @container-sm:@screen-sm;
 @screen-xs-max:@screen-xs;

 @screen-md:992px;
 @screen-md-min:@screen-md;
 @container-md:@screen-md;

 @screen-lg:1230px;
 @screen-lg-min:@screen-lg;
 @container-lg:@screen-lg;


 //页面整体变量
 @font-family-sans-serif:  "Helvetica Neue", Helvetica, Arial, sans-serif;
 @font-family-serif:       Georgia, "Times New Roman", Times, serif;
 @font-family-base:        @font-family-sans-serif;
 @font-size-base:          14px;

//全局变量
 .box-sizing(@box-model){
   -webkit-box-sizing: @box-model;
      -moz-box-sizing: @box-model;
           box-sizing: @box-model;
 }


 * {
   .box-sizing(border-box);
    padding:0;
    margin: 0;
    border:none;
    list-style: none;
 }
 *:before,
 *:after {
   .box-sizing(border-box);
 }

 html {
   font-size: 10px;
   -webkit-tap-highlight-color: rgba(0,0,0,0);
 }

 body {
   font-family: @font-family-base;
   font-size: @font-size-base;
 }


 //清楚浮动
 .clear_fix() {
   &:before,
   &:after {
     content: " ";
     display: table;
   }
   &:after {
     clear: both;
   }
 }
 .clear_fix {
   .clear_fix();
 }

 //container 设置
 .container-fixed(@gutter:@grid-gutter-width){
   margin-left: auto;
   margin-right:auto;
   padding-left:(@gutter / 2);
   padding-right:(@gutter / 2);
 }

.container{
  .container-fixed();
  @media(min-width:@screen-sm-min) {
    width:@container-sm;
  }
}
 .container{
   @media(min-width:@screen-md-min) {
     width:@container-md;
   }
 }
 .container{
   @media(min-width:@screen-lg-min) {
     width:@container-lg;
   }
 }

//行row
 .make-row(@gutter:@grid-gutter-width){
   .clear_fix();
   margin-left: ceil(@gutter / -2);
   margin-right: floor(@gutter / -2);
   box-sizing: border-box;
 }
 .row{
   .make-row();
 }

 //列col
 .make-sm-column(@columns; @gutter:@grid-gutter-width){
   position: relative;
   min-height: 1px;
   padding-left: (@gutter / 2);
   padding-right: (@gutter /2);

   @media(min-width:@screen-sm-min){
     float: left;
     width: percentage((@columns/@grid-columns));
   }
 }


//制作列的内容
 .make-grid-columns() {
   .col(@index) { // initial
     @item: ~".col-sm-@{index}, .col-sm-@{index}, .col-md-@{index}, .col-lg-@{index}";
     .col((@index + 1), @item);
   }
   .col(@index, @list) when (@index =< @grid-columns) { // general; "=<" isn't a typo
     @item: ~".col-sm-@{index}";
     .col((@index + 1), ~"@{list}, @{item}");
   }
   .col(@index, @list) when (@index > @grid-columns) { // terminal
     @{list} {
       position: relative;
       min-height: 1px;
       padding-left:  ceil((@grid-gutter-width / 2));
       padding-right: floor((@grid-gutter-width / 2));
     }
   }
   .col(1); // kickstart it
 }


 .float-grid-columns(@class) {
   .col(@index) { // initial
     @item: ~".col-@{class}-@{index}";
     .col((@index + 1), @item);
   }
   .col(@index, @list) when (@index =< @grid-columns) { // general
     @item: ~".col-@{class}-@{index}";
     .col((@index + 1), ~"@{list}, @{item}");
   }
   .col(@index, @list) when (@index > @grid-columns) { // terminal
     @{list} {
       float: left;
     }
   }
   .col(1); // kickstart it
 }


 .calc-grid-column(@index, @class, @type) when (@type = width) and (@index > 0) {
   .col-@{class}-@{index} {
     width: percentage((@index / @grid-columns));
   }
 }
 .calc-grid-column(@index, @class, @type) when (@type = push) and (@index > 0) {
   .col-@{class}-push-@{index} {
     left: percentage((@index / @grid-columns));
   }
 }
 .calc-grid-column(@index, @class, @type) when (@type = push) and (@index = 0) {
   .col-@{class}-push-0 {
     left: auto;
   }
 }
 .calc-grid-column(@index, @class, @type) when (@type = pull) and (@index > 0) {
   .col-@{class}-pull-@{index} {
     right: percentage((@index / @grid-columns));
   }
 }
 .calc-grid-column(@index, @class, @type) when (@type = pull) and (@index = 0) {
   .col-@{class}-pull-0 {
     right: auto;
   }
 }
 .calc-grid-column(@index, @class, @type) when (@type = offset) {
   .col-@{class}-offset-@{index} {
     margin-left: percentage((@index / @grid-columns));
   }
 }

 // Basic looping in LESS
 .loop-grid-columns(@index, @class, @type) when (@index >= 0) {
   .calc-grid-column(@index, @class, @type);
   // next iteration
   .loop-grid-columns((@index - 1), @class, @type);
 }

 .make-grid(@class) {
   .float-grid-columns(@class);
   .loop-grid-columns(@grid-columns, @class, width);
   .loop-grid-columns(@grid-columns, @class, pull);
   .loop-grid-columns(@grid-columns, @class, push);
   .loop-grid-columns(@grid-columns, @class, offset);
 }


 .make-grid-columns();
 .make-grid(xs);

 @media (min-width: @screen-sm-min) {
   .make-grid(sm);
 }

 @media (min-width: @screen-md-min) {
   .make-grid(md);
 }
 @media (min-width: @screen-lg-min) {
   .make-grid(lg);
 }

 /*文本*/
 .text-wrap(){
   text-overflow: ellipsis;
   white-space: nowrap;
   overflow: hidden;
 }

 .text-wrap{
  .text-wrap()
 }

 /*模块浮动*/
 .pull_left(){
   float: left !important;
 }
 .pull_right(){
   float:right !important;
 }
 .pull_left{
   .pull_left();
 }
 .pull_right{
   .pull_right();
 }
 .center-block(){
   display: block;
   margin-left:auto;
   margin-right:auto;
 }
 .center-block{
   .center-block();
 }

 /*显示和隐藏*/
 .show(){
   display: block !important;
 }
 .hide(){
   display: none !important;
 }
 @media (min-width: @screen-xs-max) {
    .visible-xs{
      .show();
    }
   .visible-sm{
     .hide();
   }
   .visible-md{
     .hide();
   }
   .visible-lg{
     .hide();
   }

   .hidden-xs{
     .hide();
   }
   .hidden-sm{
     .show();
   }
   .hidden-md{
     .show();
   }
   .hidden-lg{
     .show();
   }
 }
 @media (min-width: @screen-sm-min) {
   .visible-xs{
      .hide();
    }
   .visible-sm{
     .show();
   }
   .visible-md{
     .hide();
   }
   .visible-lg{
     .hide();
   }
   .hidden-xs{
     .show();
   }
  .hidden-sm{
    .hide();
  }
   .hidden-md{
     .show();
   }
   .hidden-lg{
     .show();
   }
 }

 @media (min-width: @screen-md-min) {
   .visible-xs{
     .hide();
   }
   .visible-sm{
     .hide();
   }
   .visible-md{
     .show();
   }
   .visible-lg{
     .hide();
   }
   .hidden-xs{
     .show();
   }
   .hidden-sm{
     .show();
   }
   .hidden-md{
     .hide();
   }
   .hidden-lg{
     .show();
   }
 }
 @media (min-width: @screen-lg-min) {
   .visible-xs{
     .hide();
   }
   .visible-sm{
     .hide();
   }
   .visible-md{
     .hide();
   }
   .visible-lg{
     .show();
   }
   .hidden-xs{
     .show();
   }
   .hidden-sm{
     .show();
   }
   .hidden-md{
     .show();
   }
   .hidden-lg{
     .hide();
   }
 }

